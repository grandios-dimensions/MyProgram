/** * 「アルゴリズムとデータ構造」 * Hirohito Shibata (hshibata@edu.teu.ac.jp) * * 「挿入ソート」 * 使い方:  *   - InsertSort.sort(D)				配列 D をソート *   - InsertSort.sort(D, left, right)	配列 D の left...right の範囲をソート */public class InsertSort extends SuperSort {    // 配列 a を「挿入ソート」でソートする。    public static void sort(int[] a) {	sort(a, 0, a.length - 1);    }    // 配列 a の left から right までの要素を「挿入ソート」でソートする。    public static void sort(int[] a, int left, int right) {	for (int i = left + 1; i <= right; i++) {	    int x = a[i];	// 挿入する要素	    // 挿入位置を探す	    int j = i;	    while ((j > left) && (a[j - 1] > x)) {		a[j] = a[j - 1];	// D[j-1]のほうが大きければ、値を右にずらす		j--;	    }	    // 挿入位置に値を設定	    a[j] = x;	    if (process || detail) {	// 途中経過を表示		System.out.println(get_string(a, j));	    }	}    }}