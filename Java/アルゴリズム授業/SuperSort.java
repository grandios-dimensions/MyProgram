/** * 「アルゴリズムとデータ構造」 * Hirohito Shibata (hshibata@edu.teu.ac.jp) * * 「ソートの抽象クラス」 * さまざまなソート (SelectSort, InsertSort, HeapSort, QuickSort, MergeSort, ...) で共通に利用する変数や関数を提供。 */public class SuperSort {    // ソートの途中経過を表示するか否か    public static boolean process = false;    // ソートの途中経過を詳細に表示するか否か    public static boolean detail = false;                // 配列 a の i 番目の要素と j 番目の要素を入れ替える。    protected static void swap(int[] a, int i, int j) {	if (i != j) {	    int tmp = a[i];	    a[i] = a[j];	    a[j] = tmp;	}    }    // 配列から文字列を生成して返す。    protected static String get_string(int[] a) {	return get_string(a, -1);    }    // 配列から文字列を生成して返す。    // focus で正の値を設定すると、その位置の要素を "<", ">" で囲って目立つようにする。    protected static String get_string(int[] a, int focus) {	String str = "{ ";	for (int i = 0; i < a.length; i++) {	    if (i > 0)		str += ", ";	    if (focus >= 0 && i == focus) {		str += "<" + a[i] + ">";	    } else {		str += a[i];	    }	}	str += " }";	return str;    }    // 配列から文字列を生成して返す。    // f1 の位置に "(", f2 の位置に "|", f3 の位置に ")" を挿入。    protected static String get_string_center(int[] a, int f1, int f2, int f3) {	String str = "{ ";	for (int i = 0; i < a.length; i++) {	    if (i > 0)		str += ", ";	    if (f1 >= 0 && i == f1)		str += "( ";	    if (f2 >= 0 && i == f2 + 1)		str += "| ";	    str += a[i];	    if (f3 >= 0 && i == f3)		str += " )";	}	str += " }";	return str;    }        // 配列から文字列を生成して返す。    // f1 の位置に "(", f2 の要素を < > で囲って, f3 の位置に ")" を挿入。    protected static String get_string_focus(int[] a, int f1, int f2, int f3) {	String str = "{ ";	for (int i = 0; i < a.length; i++) {	    if (i > 0)		str += ", ";	    if (f1 >= 0 && i == f1)		str += "( ";	    if (f2 >= 0 && i == f2) {		str += "<";                str += a[i];                str += ">";            } else {                str += a[i];            }	    if (f3 >= 0 && i == f3)		str += " )";	}	str += " }";	return str;    }}